{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/components/PostListing.js","webpack:///./node_modules/regenerator-runtime/runtime.js","webpack:///./node_modules/@babel/runtime/regenerator/index.js"],"names":["BlogPage","state","searchTerm","currentCategories","posts","props","data","edges","filteredPosts","handleChange","event","a","target","name","value","setState","filterPosts","filter","post","node","frontmatter","title","toLowerCase","includes","length","categories","every","cat","updateCategories","category","prevState","render","this","filterCount","group","config","siteTitle","className","map","active","fieldValue","key","onClick","type","placeholder","onChange","postEdges","Component","pageQuery","PostListing","getPostList","postEdge","path","fields","slug","tags","thumbnail","date","excerpt","timeToRead","simple","postList","childImageSharp","fixed","popular","formatDate","newest","moment","subtract","to","runtime","exports","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","previousPromise","callInvokeWithMethodAndArg","Promise","resolve","reject","invoke","result","__await","then","unwrapped","error","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","module","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"component---src-pages-blog-js-21fd5f3a4dfb44f0a6e7.js","sourcesContent":["import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\n\nexport default class BlogPage extends Component {\n  state = {\n    searchTerm: '',\n    currentCategories: [],\n    posts: this.props.data.posts.edges,\n    filteredPosts: this.props.data.posts.edges,\n  }\n\n  handleChange = async event => {\n    const { name, value } = event.target\n\n    await this.setState({ [name]: value })\n\n    this.filterPosts()\n  }\n\n  filterPosts = () => {\n    const { posts, searchTerm, currentCategories } = this.state\n\n    let filteredPosts = posts.filter(post =>\n      post.node.frontmatter.title.toLowerCase().includes(searchTerm.toLowerCase())\n    )\n\n    if (currentCategories.length > 0) {\n      filteredPosts = filteredPosts.filter(\n        post =>\n          post.node.frontmatter.categories &&\n          currentCategories.every(cat => post.node.frontmatter.categories.includes(cat))\n      )\n    }\n\n    this.setState({ filteredPosts })\n  }\n\n  updateCategories = category => {\n    const { currentCategories } = this.state\n\n    if (!currentCategories.includes(category)) {\n      this.setState(prevState => ({\n        currentCategories: [...prevState.currentCategories, category],\n      }))\n    } else {\n      this.setState(prevState => ({\n        currentCategories: prevState.currentCategories.filter(cat => category !== cat),\n      }))\n    }\n  }\n\n  render() {\n    const { filteredPosts, searchTerm, currentCategories } = this.state\n    const filterCount = filteredPosts.length\n    const categories = this.props.data.categories.group\n\n    return (\n      <Layout>\n        <Helmet title={`Articles – ${config.siteTitle}`} />\n        <SEO />\n        <div className=\"container\">\n          <h1>Articles</h1>\n          <div className=\"category-container\">\n            {categories.map(category => {\n              const active = currentCategories.includes(category.fieldValue)\n\n              return (\n                <div\n                  className={`category-filter ${active ? 'active' : ''}`}\n                  key={category.fieldValue}\n                  onClick={async () => {\n                    await this.updateCategories(category.fieldValue)\n                    await this.filterPosts()\n                  }}\n                >\n                  {category.fieldValue}\n                </div>\n              )\n            })}\n          </div>\n          <div className=\"search-container\">\n            <input\n              className=\"search\"\n              type=\"text\"\n              name=\"searchTerm\"\n              value={searchTerm}\n              placeholder=\"Type here to filter posts...\"\n              onChange={this.handleChange}\n            />\n            <div className=\"filter-count\">{filterCount}</div>\n          </div>\n          <PostListing postEdges={filteredPosts} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogQuery {\n    posts: allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { template: { eq: \"post\" } } }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt(pruneLength: 180)\n          timeToRead\n          frontmatter {\n            title\n            tags\n            categories\n            thumbnail {\n              childImageSharp {\n                fixed(width: 150, height: 150) {\n                  ...GatsbyImageSharpFixed\n                }\n              }\n            }\n            date\n            template\n          }\n        }\n      }\n    }\n    categories: allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___categories) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\nimport moment from 'moment'\nimport { formatDate } from '../utils/global'\n\nexport default class PostListing extends Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = postEdges.map(postEdge => {\n      return {\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        thumbnail: postEdge.node.frontmatter.thumbnail,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead,\n        categories: postEdge.node.frontmatter.categories,\n      }\n    })\n    return postList\n  }\n\n  render() {\n    const { simple } = this.props\n    const postList = this.getPostList()\n\n    return (\n      <section className={`posts ${simple ? 'simple' : ''}`}>\n        {postList.map(post => {\n          let thumbnail\n          if (post.thumbnail) {\n            thumbnail = post.thumbnail.childImageSharp.fixed\n          }\n\n          const popular = post.categories.includes('Popular')\n          const date = formatDate(post.date)\n          const newest = moment(post.date) > moment().subtract(1, 'months')\n\n          return (\n            <Link to={post.path} key={post.title}>\n              <div className=\"each\">\n                {thumbnail ? <Img fixed={thumbnail} /> : <div />}\n                <div className=\"each-list-item\">\n                  <h2>{post.title}</h2>\n                  {!simple && <div className=\"excerpt\">{date}</div>}\n                </div>\n                {newest && (\n                  <div className=\"alert\">\n                    <div className=\"new\">New!</div>\n                  </div>\n                )}\n                {popular && !simple && !newest && (\n                  <div className=\"alert\">\n                    <div className=\"popular\">Popular</div>\n                  </div>\n                )}\n              </div>\n            </Link>\n          )\n        })}\n      </section>\n    )\n  }\n}\n","require(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.object.set-prototype-of\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es7.symbol.async-iterator\");\n\nrequire(\"core-js/modules/es6.symbol\");\n\n/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar runtime = function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n    return generator;\n  }\n\n  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\"; // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n\n  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n\n  function Generator() {}\n\n  function GeneratorFunction() {}\n\n  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n\n\n  var IteratorPrototype = {};\n\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n\n  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] = GeneratorFunction.displayName = \"GeneratorFunction\"; // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      prototype[method] = function (arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function (genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can\n    // do is to check its .name property.\n    (ctor.displayName || ctor.name) === \"GeneratorFunction\" : false;\n  };\n\n  exports.mark = function (genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  }; // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n\n\n  exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  };\n\n  function AsyncIterator(generator) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n\n        if (value && typeof value === \"object\" && hasOwn.call(value, \"__await\")) {\n          return Promise.resolve(value.__await).then(function (value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function (err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return Promise.resolve(value).then(function (unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function (error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new Promise(function (resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise = // If enqueue has been called before, then we want to wait until\n      // all previous Promises have been resolved before calling invoke,\n      // so that results are always delivered in the correct order. If\n      // enqueue has not been called before, then it is important to\n      // call invoke immediately, without waiting on a callback to fire,\n      // so that the async generator function has the opportunity to do\n      // any necessary setup in a predictable way. This predictability\n      // is why the Promise constructor synchronously invokes its\n      // executor callback, and why async functions synchronously\n      // execute code before the first await. Since we implement simple\n      // async functions in terms of async generators, it is especially\n      // important to get this right, even though it requires care.\n      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later\n      // invocations of the iterator.\n      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n    } // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n\n\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n\n  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n\n  exports.async = function (innerFn, outerFn, self, tryLocsList) {\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList));\n    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.\n    : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        } // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n\n\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n        var record = tryCatch(innerFn, self, context);\n\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done ? GenStateCompleted : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted; // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  } // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n\n\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (!info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).\n\n      context.next = delegate.nextLoc; // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    } // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n\n\n    context.delegate = null;\n    return ContinueSentinel;\n  } // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n\n\n  defineIteratorMethods(Gp);\n  Gp[toStringTagSymbol] = \"Generator\"; // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n\n  Gp[iteratorSymbol] = function () {\n    return this;\n  };\n\n  Gp.toString = function () {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function (object) {\n    var keys = [];\n\n    for (var key in object) {\n      keys.push(key);\n    }\n\n    keys.reverse(); // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      } // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n\n\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n            next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n          return next;\n        };\n\n        return next.next = next;\n      }\n    } // Return an iterator with no values.\n\n\n    return {\n      next: doneResult\n    };\n  }\n\n  exports.values = values;\n\n  function doneResult() {\n    return {\n      value: undefined,\n      done: true\n    };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      this.prev = 0;\n      this.next = 0; // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n      this.method = \"next\";\n      this.arg = undefined;\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n    stop: function stop() {\n      this.done = true;\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !!caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry && (type === \"break\" || type === \"continue\") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" || record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n\n          return thrown;\n        }\n      } // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n\n\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  }; // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n\n  return exports;\n}( // If this script is executing as a CommonJS module, use module.exports\n// as the regeneratorRuntime namespace. Otherwise create a new empty\n// object. Either way, the resulting object will be used to initialize\n// the regeneratorRuntime variable at the top of this file.\ntypeof module === \"object\" ? module.exports : {});\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}","module.exports = require(\"regenerator-runtime\");\n"],"sourceRoot":""}